z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
?`:`
seq(1,20_
seq(1,20)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
along=my_seq
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char, "Abhi")
my_name
paste(my_name, collapse = " ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"), sep"")
paste(1:3,c("X","Y","Z"), sep="")
paste(LETTERS,1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z<-rep(Na,1000)
z<-rep(NA,1000)
myData <- sample (c(y,z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y<0]
y[y>0]
x[x>0]
x[!is.na(x)  x . 0]
x[!is.na(x)  x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector <-1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
matrix(1:20,4,5)
myMatrix <- matrix(1:20,4,5)
myMatrix <- matrix(1:20,nrow=4,ncol=5)
myMatrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(myMatrix,myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <-data.frame(patiens,myMatrix)
myData <-data.frame(patients,myMatrix)
myData
class(myData)
cnames <- c("patient", "age', "weight", "bp", "rating", "test"))
cnames <- c("patient", "age', "weight", "bp", "rating", "test")
cnames <- c("patient", "age', "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData)<-cnames
myData
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
TRUE == TRUE
(FALE == TRUE) == FALSE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10 <= 10
5 != 7
!(5==7)
5!=7
!5==7
False & False
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6!= 8 && 4 > 3.9
ISTRUE(6>4)
isTRUE(6>4)
indentical ('twins,'twins')
indentical ('twins','twins')
indentical('twins','twins')
identical('twins','twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints<0)
all(ints>0)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flag,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags [, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
summary(flags)
str(flags)
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summar(plants)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replate=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE,c(0.3,0.7))
sample(c(0,1),100,replace=TRUE,prob = c(0.3,0.7))
flips <- sample(c(0,1),100,replace=TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob0.7)
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois()
rpois(5)
rpois(5, 10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
uncless(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unlcass(t2)
unclass(t2)
str(uncless(t2))
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.tim()>t1
Sys.time()>t1
Sys.tim()-t1
Sys.time()-t1
difftime(Sys.time(),t1,units = 'days')
library(swirl)
swirl()
library(swirl)
install_from_swirl("Data Analysis")
swirl()
swirl()
0
library(swirl)
install_from_swirl("Open Intro")
install_from_swirl("Mathematical Biostatistics Boot Camp")
install_from_swirl("Regression Models")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Statistical Inference")
swirl()
setwd("~/Documents/Coursera/JHDS_Rprogramming/assignment_3")
outcome <- read.csv("data/outcome_of-care-measure.csv", colClasses = "character")
outcome <- read.csv("~/data/outcome_of-care-measure.csv", colClasses = "character")
outcome <- read.csv("~data/outcome_of-care-measure.csv", colClasses = "character")
outcome <- read.csv("~data/outcome-of-care-measure.csv", colClasses = "character")
outcome <- read.csv("data/outcome-of-care-measure.csv", colClasses = "character")
outcome <- read.csv("~/data/outcome-of-care-measure.csv", colClasses = "character")
outcome <- read.csv("~/data/outcome-of-care-measures.csv", colClasses = "character")
outcome <- read.csv("data/outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
names(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
data <- outcome
isostate <- which(data$State == "TX")
nameVect <- data$Hospital.Name[isostate]
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
?sprintf
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
install(rmarkdown)
library(rmarkdown)
install.packages("rmarkdown")
install.packages("rmarkdown")
knit('test.rmd','test.md')
knitr('test.rmd','test.md')
require(knitr)
knitr('test.rmd','test.md')
library(knitr)
knitr('test.rmd','test.md')
knit('test.rmd','test.md')
setwd("~/Desktop")
knit('test.rmd','test.md')
setwd("~/Documents/Coursera/JHDS_ReproResearch/assignment_1")
data <- read.csv("activity.csv", colClasses = "character")
head(data)
str(data)
data <- read.csv("activity.csv")
str(data)
?levels
vector<-data$date["2012-10-01"]
vector
View(data)
day <- c(1:288)
day <- rep(NA,288)
class(day)
as.list(day)
?which
which(data, data$date == "2012-10-01")
which(data$date == "2012-10-01")
vect <- which(data$date == "2012-10-01")
meansteps <- mean(data$steps[vect])
meansteps
cleandata <- data[is.na(data)] <- 0
data[is.na(data)] <- 0
class(data)
View(data)
meansteps <- mean(data$steps[vect])
meansteps
?as.Date
as.Date(data$date)
class(data$date)
day <- levels(data$date)
for (seq_along(day)) {
?seq_along
day[1]
vect <- which(data$date == day[1])
vect
vect <- which(data$date == day[2])
vect
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
hdata <- cbind(day,meansteps)
View(hdata)
hist(hdata)
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
hdata <- cbind(as.numeric(day),meansteps)
hist(hdata)
?hist
hist(hdata, col = blue)
hist(hdata, col = grey)
hist(hdata, col = 'grey')
hist(hdata, col = 'blue')
5:5:80
c(5:80)
seq(from = 5, to = 80, by = 5)
hist(hdata, col = 'blue', breaks = seq(from = 0, to = 80, by = 5))
?hist()
hist(hdata, col = 'blue', breaks = seq(from = 0, to = 80, by = 5), main = 'Histogram of the total number of steps taken each day')
hist(hdata, col = 'blue', breaks = seq(from = 0, to = 80, by = 5), main = 'Histogram of the total number of steps taken each day', xlab = 'steps')
?list
mean<-list()
}
mean <- list()
class(list)
# Loading Data
options(warn=-1)
data<- read.csv("activity.csv")
# Cleaning Data
data[is.na(data)] <- 0
# Subsetting and finding mean steps per day
day <- levels(data$date)
steps <- vector("numeric",length(day))
for (i in seq_along(day)){
vect <- which(data$date == day[i])
steps[i]<-sum(data$steps[v
a
interval <- data$interval[1:288]
?plot
good <- complete.cases(data)
?sum
?mean
as.list(good)
?complete.cases
bad <- data$steps(is.na)
bad <- is.na(data$steps)
View(data)
View(data)
data<- read.csv("activity.csv")
View(data)
day <- levels(data$date)
steps <- vector("numeric",length(day))
for (i in seq_along(day)){
vect <- which(data$date == day[i])
steps[i]<-sum(data$steps[vect], na.rm=TRUE)
}
meansteps <- mean(steps)
mediansteps <- median(steps)
# Subsetting to cover 5 minute interval
interval <- data$interval[1:288]
insteps <- vector("numeric",length(interval))
for (i in seq_along(interval)){
vect <- which(data$interval == interval[i])
insteps[i]<-mean(data$steps[vect], na.rm = TRUE)
}
maxsteps <-max(insteps)
maxstepsinterval <- interval[which(insteps==maxsteps)]
good <- complete.cases(data)
missing <- length(data$steps)-length(data$steps[good])
length(data$steps[!good]
)
length(data$interval)
vector <- which(data$steps ==data$steps[!good])
vector
vector <- which(data$steps[!good])
vector <- data$steps[!good]
vector <- which(data$steps == NA)
vector <- which(data$steps == !good)
length(vector)
vector <- as.list(vector)
vector <- which(data$steps == 'NA')
vector <- which(data$steps == "NA")
vector <- which(is.na(data$steps))
as.list(vector)
for (i in seq_along(vector) {
for (i in seq_along(vector) {...
for (i in seq_along(vector)) {
}
int_subset <- data$interval[vector]
for (i in seq_along(vector)) {
temp<-which(insetps == int_subset[i])
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
interval <- data$interval[1:288]
}
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
}
source('~/.active-rstudio-document')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
?replace
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
View(data)
insteps
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
View(data)
mean(insteps)
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
data$steps <- replace(data$steps, is.na(data$steps), mean(insteps))
View(data)
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
newdata <- cbind(temp,data$date,data$intervals)
hist(temp, col = 'red', breaks = seq(from = 0, to = 25000, by = 1000), main = 'Histogram of the total number of steps taken each day', xlab = 'Steps')
View(newdata)
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
?ggplot
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,10))  # first histogram
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
plot( p2, col=rgb(1,0,0,1/4), ylim = c(0,15) add=T)  # second
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
plot( p2, col=rgb(1,0,0,1/4), ylim = c(0,20), add=T)  # second
source('~/Documents/Coursera/JHDS_ReproResearch/assignment_1/test.R')
?weekdays
weekdays(data$date)
class(data$date)
as.Date(data$date)
newdate <- as.Date(data$date)
wkdays <- weekdays(newdate)
wkdays
matrix<-as.data.frame(newsteps,newdate)
cbind(newsteps,newdate)
?cbind
wkendteps[i]<-mean(temp[vect])
wkendsteps[i]<-mean(temp[vect])
newdate <- as.Date(data$date)
?plot
?weekends()
?weekends
---
title: "Reproducible Research: Peer Assessment 1"
source('~/.active-rstudio-document', echo=TRUE)
View(data)
?seq
